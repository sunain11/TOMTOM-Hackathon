import java.text.SimpleDateFormat

def releaseProps = new Properties()
releaseProps.load(new FileInputStream("$rootProject.rootDir/release.properties"))

ext {
    releaseBuild = false
    release_notify_group = "sampleapp_group_internal";
    buildNumber = getBuildNumber()
    proguardEnable = getProguardOn()
    androidNdk = System.getenv("ANDROID_NDK_ROOT")
    currentDateTime = getDate()
    println "proguardEnable " + proguardEnable
    //When empty build all platforms
    devabi = "";
    if (System.getenv('BUILD_ABI') != null) {
        devabi = System.getenv('BUILD_ABI').toString()
    }
    devSymbols = false
    if (System.getenv('DEBUG_SYMBOLS') != null) {
        devSymbols = System.getenv('DEBUG_SYMBOLS').toBoolean()
    }

    androidBuildToolsVersion = '28.0.2'
    androidCompileSdkVersion = 27
    androidTargetSdkVersion = 26
    androidMinSdkVersion = 16
    buildVersionName = releaseProps.getProperty('mapsSdkVersion')
    buildVersionCode = releaseProps.getProperty("interLibVersion").replaceAll('-SNAPSHOT', '').replaceAll("\\.", '').toInteger()
    libraryVersion = releaseProps.getProperty('interLibVersion')
    releaseLib = !libraryVersion.endsWith("SNAPSHOT")
    integrationTests = getIntegrationTestEnabled()

    androidVersions = [
            room_version : "1.1.1",
            androidarch : '1.1.1',
            support     : '27.1.1',
            design      : '27.1.1',
            playservices: '15.0.1',
            multidex    : '1.0.2',
            constraint_layout: '1.1.0',
            test        : [
                    instrument_test: '1.0.1',
                    espresso       : '3.0.1',
                    dexmaker       : '1.2',
                    assertj_android: '1.1.1',
                    opengl_api     : 'gl1.1-android-2.1_r1',
                    uiautomator        : '2.1.3',
                    orchestrator       : '1.0.2-alpha1',
            ]

    ]

    //doc_start_dependencies_version_config
    libVersions = [
            timber                  : '4.6.0',
            crashlytics             : '2.9.5',
            leakcanary              : '1.6.1',
            corektx                 : '0.3',
            lombok                  : '1.16.20',
            groovy                  : '2.4.10',
            gson                    : '2.8.2',
            jsonsimple              : '1.1.1',
            guava                   : '23.4-android',
            dtool                   : '1.0',
            rxjava                  : '2.1.0',
            rxandroid               : '2.0.1',
            retrofit                : '2.3.0',
            retrofitrxjava          : '1.0.0',
            okhttp                  : '3.9.1',
            kotlin                  : '1.2.51',
            jdoocsoup               : '0.1.14',
            jodatime                : '2.9.9',
            singledateandtimepicker : '1.2.2',
            anko_version            : '0.10.4',
            glide                   : '4.7.1',
            androidgifdrawable      : '1.2.15',
            test                    : [
                    junit              : '4.12',
                    robospock          : '1.0.1',
                    robolectric        : '3.0',
                    easytesting        : '1.0.16',
                    cglib              : '3.2.4',
                    mockito            : '1.9.0',
                    easymock           : '3.2',
                    fest               : '2.0M10',
                    cglibnodep         : '3.1',
                    powermock          : '1.6.6',
                    mockitoForPowermock: '2.0.0-beta',
                    wiremock           : '2.14.0',
                    httpclientandroid  : '4.3.5.1',
                    mockito_kotlin     : '1.5.0',
                    kluent             : '1.30',
                    support            : '0.5',
                    mockk              : '1.7.15'


            ],

    ]


    internalVersions = [
            core  : releaseProps.getProperty('interLibVersion'),
            nav   : releaseProps.getProperty('interLibVersion'),
            audio : releaseProps.getProperty('audioLibVersion'),
            sdk   : releaseProps.getProperty('interLibVersion'),
            shared: releaseProps.getProperty('interLibVersion'),
            midlet: releaseProps.getProperty('interLibVersion'),
            tbt   : releaseProps.getProperty('interLibVersion'),
            port  : releaseProps.getProperty('interLibVersion'),

    ]
    //doc_end_dependencies_version_config
}

def getBuildNumber() {
    try {
        return Integer.parseInt("$parentBuildNumber");
    } catch (final Exception ex) {
        return 0;
    }
}

def getProguardOn() {
    try {
        return Boolean.parseBoolean("$proguard")
    } catch (final Exception ex) {
        println "getProguardOn false"
        return false;
    }
}

def getIntegrationTestEnabled() {
    try {
        return Boolean.parseBoolean("$integrationTests")
    } catch (final Exception ex) {
        println "integrationTests false"
        return false;
    }
}

def getDate() {
    def df = new SimpleDateFormat("yyy-MM-dd'T'HHmm'Z'")
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}
